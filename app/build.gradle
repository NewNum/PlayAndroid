plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "kotlin-kapt"
    // Parcelable 实现生成器
    id "kotlin-parcelize"

    alias(libs.plugins.compose.compiler)
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.linx.playAndroid"
        minSdk 21
        targetSdk 34
        versionCode = 3
        versionName = "1.0.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        //只打包默认资源与英文资源
        resConfigs "en"

        //room
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        //配置并启用将数据库架构导出到给定目录中的json文件的功能
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        //启用gradle增量注解处理器
                        "room.incremental"     : "true",
                        //配置room以重写查询，使其顶部星形投影在展开后包含DAO方法返回类型中定义的列
                        "room.expandProjection": "true"]
            }
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
        //NetRspKtx 使用了实验特性
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    buildFeatures {
        compose true
    }

    signingConfigs {
        debug {
            storeFile file('../linxdebug.keystore')
            storePassword 'linxiang'
            keyAlias 'jiaru'
            keyPassword 'linxiang'
        }
        release {
            storeFile file('../linx.keystore')
            storePassword 'linxxx'
            keyAlias 'jiaru'
            keyPassword 'linxxx'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            //开启混淆
            minifyEnabled true
            //去除无用资源
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            outputFileName = "${applicationId}_${getBuildDate()}_${variant.versionName}.apk"
        }
    }

    composeOptions {

        def kotlin_version = '2.0.0'
        def compose_version = '1.6.8'
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion kotlin_version
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'com.linx.playAndroid'

}

/**
 * 获取编译日期
 */
static String getBuildDate() {
    Date date = new Date()
    String dateStr = date.format("yyyy-MM-dd")
    return dateStr
}

dependencies {
    api project(path: ':common')
    // 内存泄露检测
    debugImplementation libs.leakcanary

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation libs.uiTestJunit4
    debugImplementation libs.uiTooling

    //room
    testImplementation libs.androidx.room.testing
    kapt libs.androidx.room.compiler

}